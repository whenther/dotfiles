{
  // Place your settings in this file to overwrite the default settings
  // General Settings
  "workbench.editor.showTabs": false,
  "editor.tabSize": 2,
  "editor.detectIndentation": false,
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true
  },
  "htmlhint.options": {
    "doctype-first": false
  },
  "files.associations": {
    "*.m": "matlab"
  },
  "editor.wordWrap": "on",
  "editor.wrappingIndent": "same",
  "files.autoSave": "onFocusChange",
  // Number of editors shown in the Open Editors pane. Set it to 0 to hide the pane.
  "explorer.openEditors.visible": 0,
  "diffEditor.ignoreTrimWhitespace": true,
  "editor.formatOnType": false,
  "editor.formatOnSave": false,
  "files.eol": "\n",
  // Configure glob patterns for excluding files and folders.
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/webpack-bundle.js": true
  },
  "terminal.integrated.fontFamily": "hack",
  // Windows
  // "terminal.integrated.shell.windows": "C:\\Windows\\System32\\wsl.exe",
  "terminal.integrated.shell.windows": "C:\\Windows\\System32\\cmd.exe",
  // Vim
  "vim.useSystemClipboard": true,
  "vim.leader": "<space>",
  "vim.enableNeovim": false,
  "vim.easymotion": false,
  "vim.visualstar": true,
  "vim.cmdLineInitialColon": true,
  "vim.useCtrlKeys": true,
  "vim.handleKeys": {
    "<C-f>": false,
    "<C-b>": false,
    "<C-d>": true
  },
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": [
        "j",
        "k"
      ],
      "after": [
        "<Esc>"
      ]
    },
  ],
  "vim.otherModesKeyBindingsNonRecursive": [
    {
      "before": [
        "<leader>",
        "f",
        "s"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.files.save"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "p",
        "f"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.quickOpen"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "f",
        "f"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.quickOpen"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "p",
        "t"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.view.explorer"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "n",
        "f"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.files.action.showActiveFileInExplorer"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "="
      ],
      "after": [],
      "commands": [
        {
          "command": "editor.action.formatDocument"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "/"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.view.search"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "*"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.view.search"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "b",
        "d"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.closeEditorsInGroup"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "w",
        "/"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.splitEditor"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "tab"
      ],
      "after": [
        "enter"
      ],
      "commands": [
        {
          "command": "workbench.action.openPreviousEditorFromHistory"
        },
        {
          "command": "workbench.action.acceptSelectedQuickOpenItem"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        ":"
      ],
      "after": [],
      "commands": [
        {
          "command": "workbench.action.showCommands"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "f",
        "z",
        "d"
      ],
      "after": [
        "enter"
      ],
      "commands": [
        {
          "command": "workbench.action.openGlobalSettings"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "m",
        "t",
        "b"
      ],
      "commands": [
        {
          "command": "extension.runFileSpecs"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "m",
        "t",
        "t"
      ],
      "commands": [
        {
          "command": "extension.runSpecLine"
        }
      ]
    },
    {
      "before": [
        "<leader>",
        "m",
        "t",
        "l"
      ],
      "commands": [
        {
          "command": "extension.runLastSpec"
        }
      ]
    },
    {
      "before": [
        "j"
      ],
      "after": [
        "g",
        "j"
      ]
    },
    {
      "before": [
        "k"
      ],
      "after": [
        "g",
        "k"
      ]
    }
  ],
  "window.zoomLevel": 0,
  "workbench.colorTheme": "Dracula",
  "editor.minimap.enabled": false,
  "ocaml.lintOnSave": true,
  "ocaml.merlinPath": "ocamlmerlin",
  // Lets remapped esc key work on ubuntu.
  "keyboard.dispatch": "keyCode",
  "markdownlint.config": {
    "default": true,
    "MD003": {
      "style": "consistent"
    },
    "MD025": false,
    "MD033": false,
    "MD007": {
      "indent": 2
    },
    "no-hard-tabs": true
  },
  "explorer.autoReveal": false,
  "ruby.lint": {
    "rubocop": false
  },
  "ruby.specCommand": "spring rspec",
  "workbench.editor.labelFormat": "medium",
  "cSpell.enabledLanguageIds": [
    "elixir",
    "erb",
    "javascript",
    "javascriptreact",
    "json",
    "markdown",
    "plaintext",
    "ruby",
    "text",
    "typescript",
    "typescriptreact",
    "yml"
  ],
  "cSpell.userWords": [
    "Ockelmann",
    "bookmarkers",
    "caml",
    "changeset",
    "concat",
    "cond",
    "consts",
    "coord",
    "datetime",
    "defdelegate",
    "defmodule",
    "defp",
    "defstruct",
    "dissoc",
    "downcase",
    "ecto",
    "erlang",
    "injectable",
    "moduledoc",
    "params",
    "repo",
    "serializer",
    "signup",
    "struct",
    "structs",
    "timestamps",
    "truthy"
  ],
  "[reason]": {
    "editor.codeLens": false
  },
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false
}